plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.miniProject'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.modelmapper:modelmapper:3.1.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('viteBuild', Exec) {
	group = 'frontend'
	description = 'Install dependencies and build the Vite frontend'

	workingDir '../frontend'  // 백엔드와 같은 레벨의 프론트엔드 경로 지정
	commandLine 'C:/Program Files/nodejs/npm.cmd', 'install'
}

tasks.register('viteBuildRun', Exec) {
	group = 'frontend'
	description = 'Run the Vite build for the frontend'

	workingDir '../frontend'
	commandLine 'C:/Program Files/nodejs/npm.cmd', 'run', 'build'
}

tasks.named('processResources') {
	dependsOn 'viteBuild', 'viteBuildRun'
}

tasks.register('copyFrontendToBackend', Copy) {
	group = 'frontend'
	description = 'Copy Vite build output to Spring Boot static folder'

	from '../frontend/dist'  // Vite 빌드 결과 폴더
	into 'src/main/resources/static'  // Spring Boot의 정적 리소스 폴더
}

tasks.named('processResources') {
	dependsOn 'viteBuild', 'viteBuildRun', 'copyFrontendToBackend'
}

bootRun {
	dependsOn 'copyFrontendToStatic'
	doFirst {
		println("Starting Spring Boot with the latest frontend build...")
	}
}